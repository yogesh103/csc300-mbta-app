version: '3'
services:
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend
    volumes:
      - ./frontend/node_modules:/app/node_modules
      - ./frontend:/app
    ports:
      - "3000:3000"
      - "9224:9224"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - WDS_SOCKET_HOST=127.0.0.1 
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true 
    command: npm start
    depends_on:
      - backend
  backend:
    build:
      dockerfile: Dockerfile
      context: ./backend
    volumes:
      - ./backend:/app
      - ./backend/node_modules:/app/node_modules
    ports:
      - "9000:9000"
      - "9229:9229"
    environment:
      - SERVER_PORT=9000
      - NODE_ENV=development
      - DB_URL=mongodb://root:example@mongo:27017/
      - ACCESS_TOKEN_SECRET=xb3tim8rnIdoMMJfGNaqMxHX6zyWGBrR
      - WDS_SOCKET_HOST=127.0.0.1 
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true  
    depends_on:
      - mongo
      - redis
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      - mongo  

  redis:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - "6379:6379"
      - "8001:8001"
    restart: always